-- CAP 2 LAB I 

-- 1 
USE PEDIDOS;

-- 2
SELECT * 
FROM TB_PEDIDO
WHERE DATA_EMISSAO BETWEEN '2014-01-01' AND '2014-01-31' AND CODVEN = (
	SELECT CODVEN
	FROM TB_VENDEDOR
	WHERE NOME = 'MARCELO'
);

-- 3
SELECT  P.NUM_PEDIDO AS [NUMERO DO PEDIDO],
		CL.NOME		 AS [NOME DO CLIENTE],
		VD.NOME		 AS [NOME DO VENDEDOR]
FROM		TB_PEDIDO	AS P
LEFT JOIN	TB_CLIENTE	AS CL ON CL.CODCLI = P.CODCLI
LEFT JOIN	TB_VENDEDOR AS VD ON VD.CODVEN = P.CODVEN
WHERE DATA_EMISSAO BETWEEN '2014-01-01' AND '2014-01-31';

-- 4 
SELECT  P.NUM_PEDIDO  AS [NUMERO DO PEDIDO],
		PR.DESCRICAO  AS [DESCRICAO],
		IP.QUANTIDADE AS [QUANTIDADE],
		CL.NOME		  AS [NOME DO CLIENTE],
		VD.NOME		  AS [NOME DO VENDEDOR]
FROM		TB_PEDIDO		AS P
LEFT JOIN	TB_ITENSPEDIDO  AS IP ON P.NUM_PEDIDO = IP.NUM_PEDIDO
LEFT JOIN	TB_PRODUTO		AS PR ON PR.COD_PRODUTO = IP.COD_PRODUTO
LEFT JOIN	TB_CLIENTE		AS CL ON CL.CODCLI = P.CODCLI
LEFT JOIN	TB_VENDEDOR		AS VD ON VD.CODVEN = P.CODVEN
WHERE DATA_EMISSAO BETWEEN '2014-01-01' AND '2014-01-31';

-- 5
SELECT	COUNT(*)		AS [TOTAL PEDIDOS],
		MAX(VLR_TOTAL)  AS [VALOR MAXIMO],
		MIN(VLR_TOTAL)  AS [VALOR MINIMO]
FROM TB_PEDIDO
WHERE DATA_EMISSAO BETWEEN '2014-01-01' AND '2014-01-31';

-- 6
SELECT  VD.NOME,
		SUM(PD.VLR_TOTAL)						AS [VALOR TOTAL VENDIDO],
		PD.VLR_TOTAL * VD.PORC_COMISSAO / 100	AS [COMISSï¿½O]
FROM		TB_VENDEDOR	AS VD
LEFT JOIN	TB_PEDIDO	AS PD ON PD.CODVEN = VD.CODVEN
GROUP BY VD.NOME, PD.VLR_TOTAL * VD.PORC_COMISSAO / 100;

-- 7
SELECT TOP 10	CL.NOME,
				SUM(VLR_TOTAL) AS [TOTAL VENDIDO]
FROM		TB_CLIENTE AS CL
LEFT JOIN	TB_PEDIDO  AS PD ON PD.CODCLI = CL.CODCLI
WHERE PD.DATA_EMISSAO BETWEEN '2014-01-01' AND '2014-01-31'
GROUP BY CL.NOME;

-- 8
SELECT  CL.NOME
FROM TB_CLIENTE AS CL
WHERE CL.CODCLI NOT IN (
	SELECT PD.CODCLI
	FROM TB_PEDIDO AS PD
	WHERE PD.DATA_EMISSAO BETWEEN '2014-01-01' AND '2014-01-31'
);

--9
UPDATE TB_PRODUTO
SET PRECO_VENDA = 1.20 * PRECO_CUSTO
WHERE COD_TIPO = 5;

-- 10
UPDATE TB_PRODUTO
SET PRECO_VENDA = 1.20 * PRECO_CUSTO
WHERE COD_TIPO = (
	SELECT COD_TIPO
	FROM TB_TIPOPRODUTO
	WHERE TIPO = 'REGUA'
);

-- LAB II

-- 1
USE PEDIDOS;

-- 2  
SELECT * INTO PRODUTOS_COPIA
FROM TB_PRODUTO

-- 3
DELETE FROM PRODUTOS_COPIA
OUTPUT deleted.COD_PRODUTO
WHERE COD_TIPO = (
	SELECT COD_TIPO
	FROM TB_TIPOPRODUTO
	WHERE TIPO = 'CANETA'
)

-- 4 
BEGIN TRAN

UPDATE PRODUTOS_COPIA
SET PRECO_VENDA *= 1.1
OUTPUT  deleted.ID_PRODUTO,
		deleted.DESCRICAO,
		deleted.PRECO_VENDA		AS [PRECO_VENDA_ANTIGO],
		inserted.PRECO_VENDA	AS [PRECO_VENDA_NOVO]
WHERE COD_TIPO = (
	SELECT COD_TIPO
	FROM TB_TIPOPRODUTO
	WHERE TIPO = 'REGUA'
);

COMMIT

-- 5
BEGIN TRAN

SET IDENTITY_INSERT PRODUTOS_COPIA ON;

MERGE INTO	PRODUTOS_COPIA	AS PC
USING		TB_PRODUTO		AS PR
ON PC.COD_PRODUTO = PR.COD_PRODUTO
WHEN MATCHED THEN
		UPDATE 
		SET PC.PRECO_VENDA = PR.PRECO_VENDA
WHEN NOT MATCHED THEN 
		INSERT (
			ID_PRODUTO, COD_PRODUTO, DESCRICAO, COD_UNIDADE, COD_TIPO, PRECO_CUSTO,
			PRECO_VENDA, QTD_ESTIMADA, QTD_REAL, QTD_MINIMA, CLAS_FISC, IPI, PESO_LIQ
		)
		values (
			PR.ID_PRODUTO, PR.COD_PRODUTO, PR.DESCRICAO, PR.COD_UNIDADE, PR.COD_TIPO, PR.PRECO_CUSTO,
			PR.PRECO_VENDA, PR.QTD_ESTIMADA, PR.QTD_REAL, PR.QTD_MINIMA, PR.CLAS_FISC, PR.IPI, PR.PESO_LIQ
		);

SET IDENTITY_INSERT PRODUTOS_COPIA OFF;

COMMIT 

-- B
-- 1 
USE PEDIDOS

-- 2
SELECT  CL.ESTADO,
		SUM(PD.VLR_TOTAL) 	AS [SOMA VALOR TOTAL],
		MONTH(DATA_EMISSAO) AS [MES]
FROM TB_CLIENTE 	AS CL
LEFT JOIN TB_PEDIDO AS PD ON PD.CODCLI = CL.CODCLI
WHERE YEAR(DATA_EMISSAO) = 2013
GROUP BY CL.ESTADO, MONTH(DATA_EMISSAO);

-- 3
SELECT 	ESTADO,	[1] AS [MES 1], [2] AS [MES 2], [3] AS [MES 3],
				[4] AS [MES 4], [5] AS [MES 5], [6] AS [MES 6],
				[7] AS [MES 7], [8] AS [MES 8], [9] AS [MES 9],
				[10] AS [MES 10], [11] AS [MES 11], [12] AS [MES 12]
FROM (
	SELECT C.ESTADO, P.VLR_TOTAL, MONTH(P.DATA_EMISSAO) AS [MES]
	FROM 		TB_PEDIDO 	AS P
	LEFT JOIN	TB_CLIENTE 	AS C ON C.CODCLI = P.CODCLI 
	WHERE YEAR(DATA_EMISSAO) = 2013
) AS P
PIVOT (
	SUM(VLR_TOTAL) FOR MES IN (
								[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12]
								) 
) AS PVT 
ORDER BY ESTADO;

-- 4
SELECT 	ESTADO, CIDADE,	[1] AS [MES 1], [2] AS [MES 2], [3] AS [MES 3],
						[4] AS [MES 4], [5] AS [MES 5], [6] AS [MES 6],
						[7] AS [MES 7], [8] AS [MES 8], [9] AS [MES 9],
						[10] AS [MES 10], [11] AS [MES 11], [12] AS [MES 12]
FROM (
	SELECT C.ESTADO, C.CIDADE,P.VLR_TOTAL, MONTH(P.DATA_EMISSAO) AS [MES]
	FROM 		TB_PEDIDO 	AS P
	LEFT JOIN	TB_CLIENTE 	AS C ON C.CODCLI = P.CODCLI 
	WHERE YEAR(DATA_EMISSAO) = 2013
) AS P
PIVOT (
	SUM(VLR_TOTAL) FOR MES IN (
								[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12]
								) 
) AS PVT 
ORDER BY ESTADO;

-- C
-- 1 
USE PEDIDOS;

-- 2
WITH CTE(MES, ANO, [MAIOR PEDIDO], CODCLI, NUM_PEDIDO)
AS
(
	SELECT 	MONTH(DATA_EMISSAO),
			YEAR(DATA_EMISSAO),
			MAX(VLR_TOTAL),
			CODCLI,
			NUM_PEDIDO
	FROM TB_PEDIDO
	WHERE YEAR(DATA_EMISSAO) = 2013
	GROUP BY CODCLI, NUM_PEDIDO,MONTH(DATA_EMISSAO), YEAR(DATA_EMISSAO)
)

SELECT  CL.NOME,
		CTE.MES,
		CTE.ANO,
		CTE.[MAIOR PEDIDO],
		CTE.[NUM_PEDIDO]
FROM CTE 
LEFT JOIN TB_CLIENTE AS CL ON CTE.CODCLI = CL.CODCLI

-- C
-- 1
USE PEDIDOS;

-- 2
SELECT 	CL.CODCLI 		AS [CODIGO CLIENTE],
		CL.NOME 		AS [NOME CLIENTE],
		CL.ESTADO		AS [ESTADO],
		PD.NUM_PEDIDO 	AS [NUMERO DO PEDIDO],
		PD.VLR_TOTAL	AS [VALOR TOTAL PEDIDO],

FROM 		TB_PEDIDO 	AS PD 
LEFT JOIN 	TB_CLIENTE 	AS CL ON PD.CODCLI = CL.CODCLI

OUTER APPLY (
	SELECT  COUNT(*) 		AS [QUANTIDADE PEDIDOS],
			SUM(VLR_TOTAL) 	AS [SOMA TOTAL],

	FROM TB_PEDIDO AS PD
)


